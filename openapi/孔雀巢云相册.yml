openapi: '3.0.2'
info:
  title: 孔雀巢云存储
  description: |
    # 简述
    给孔雀巢商家后台的云存储使用，线上服务器地址 <https://album.kongquechao.com>

    # 验证授权
    这些API使用以下的授权验证方式
      - Bearer Token
      
    <SecurityDefinitions />

  termsOfService: https://smartbear.com/terms-of-use/
  contact:
    name: Adam Smith
    url: https://github.com/metanoia1989
    email: m15171641694@163.com
  x-logo:
    url: './assets/images/logo-brand.png'
    altText: 孔雀巢云存储
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: https://album.kongquechao.com
    description: 线上服务器
  - url: http://cqc-album.test
    description: 本地服务器

security:
  - ApiKeyAuth: []
    
tags:
  - name: VIP
    description: VIP

paths:
  /api/vip/setmenus:
    get:
      tags:
        - VIP
      summary: VIP套餐列表
      description: 获取VIP套餐列表
      responses:
        '200':
          description: 套餐列表响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetMenuItemList'

  /api/order/make:
    post:
      tags:
        - VIP
      summary: VIP下单
      description: 下单后的响应
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                folder_id:
                  type: integer
                  description: 相册ID
                setmenu_id:
                  type: integer
                  description: 套餐ID
              required:
                - folder_id
                  setmenu_id
      responses:
        '200':
          description: 下单成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSuccess'

  /api/order/confirm:
    post:
      tags:
        - VIP
      summary: 确定订单支付成功
      description: 确认订单支付成功
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                order_sn:
                  type: string
                  description: 订单号
              required:
                - order_sn
      responses:
        '200':
          description: 确定支付成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectResponse'
        '201':
          description: 确认支付失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectResponse'
              example:
                code: -1
                msg: 确定订单支付失败
                data: []
  /api/wxpay/vippay:
    post:
      tags:
        - VIP
      summary: 小程序支付参数
      description: 获取小程序支付参数
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                order_sn:
                  type: string
                  description: 订单号
                jscode:
                  type: string
                  description: 微信登陆code
              required:
                - order_sn
                  jsocde
      responses:
        '200':
          description: 小程序支付参数响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'

           

      



                
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: token

  schemas:
    Response:
      description: 接口响应公共字段
      type: object
      properties:
        code:
          type: integer 
        msg:
          type: string
        data: {}
      required:
        - code
        - msg

    ObjectResponse:
      description: 任意对象数据的响应
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
      

    OrderSuccess:
      description: 下单成功
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                order_id:
                  type: integer
                order_num:
                  type: string
                  description: 订单号
      example:
        code: 0
        msg: success
        data:
          order_id: 2
          order_num: '2021060412064354720'
          
    SetMenuItem:
      description: 套餐项
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: 套餐名称
        tag:
          type: string
          enum:
            - 推荐
              5.5折
              2.7折
        price:
          type: string
        original_price:
          type: string
        duration: 
          type: string
          description: 套餐时长
        status:
          type: integer
          description: 套餐状态
          enum:
            - 1
              0
      example:
        id: 3
        name: 永久保存
        introduction: ''
        tag: 推荐
        price: '99.00'
        original_price: '888'
        duration: forever
        status: 1
        sort: 101

    SetMenuItemList:
      description: 下单成功
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SetMenuItem'
    
    Payment:
      description: 支付参数
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                appId:
                  type: string
                timeStamp:
                  type: string
                nonceStr:
                  type: string
                package:
                  type: string
                signType:
                  type: string
                paySign:
                  type: string
      example:
        code: 0
        msg: success
        data:
          appId: wxb673dc0e4e444604
          timeStamp: '1623028456'
          nonceStr: UT59Kye8ObjaaufR
          package: prepay_id=wx070914169218999b9e22bcdd1144b20000
          signType: MD5
          paySign: 9C443A2F9359195FD8DC7A9BBE2D1A90
